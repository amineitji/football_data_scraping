# Variables
PYTHON = python3
VENV_ACTIVATE = ./env/bin/activate
SCRIPT = ./src/main.py

# Directories to clean
VIZ_DATA_DIR = ./viz_data
PLAYER_DATA_DIR = ./player_data
HTML_DATA_DIR = ./data/html
PHOTO_DATA_DIR = ./data/photo
ADVANCED_ANALYSIS_DIR = ./advanced_analysis

# Default values for arguments
URL = ""
PLAYER_NAME = ""
POSTE = ""
NB_PASSE_D = 0

# Commands
.PHONY: all run run-advanced run-advanced-only clean install setup help

# Default command
all: help

# Run the Python script with standard arguments
run:
	bash -c 'source $(VENV_ACTIVATE) && $(PYTHON) $(SCRIPT) "$(URL)" "$(PLAYER_NAME)" "$(POSTE)" "$(NB_PASSE_D)"'

# Run the Python script with advanced analysis
run-advanced:
	bash -c 'source $(VENV_ACTIVATE) && $(PYTHON) $(SCRIPT) "$(URL)" "$(PLAYER_NAME)" "$(POSTE)" "$(NB_PASSE_D)" --advanced'

# Run only advanced analysis (faster)
run-advanced-only:
	bash -c 'source $(VENV_ACTIVATE) && $(PYTHON) $(SCRIPT) "$(URL)" "$(PLAYER_NAME)" "$(POSTE)" --advanced-only'

# Quick run commands for common scenarios
quick-mil:
	@echo "üöÄ Analyse rapide pour milieu de terrain..."
	bash -c 'source $(VENV_ACTIVATE) && $(PYTHON) $(SCRIPT) "$(URL)" "$(PLAYER_NAME)" "MIL" 0'

quick-att:
	@echo "üöÄ Analyse rapide pour attaquant..."
	bash -c 'source $(VENV_ACTIVATE) && $(PYTHON) $(SCRIPT) "$(URL)" "$(PLAYER_NAME)" "ATT" 0'

quick-def:
	@echo "üöÄ Analyse rapide pour d√©fenseur..."
	bash -c 'source $(VENV_ACTIVATE) && $(PYTHON) $(SCRIPT) "$(URL)" "$(PLAYER_NAME)" "DEF" 0'

quick-gk:
	@echo "üöÄ Analyse rapide pour gardien..."
	bash -c 'source $(VENV_ACTIVATE) && $(PYTHON) $(SCRIPT) "$(URL)" "$(PLAYER_NAME)" "GK" 0'

# Advanced analysis shortcuts
advanced-mil:
	@echo "üß† Analyse avanc√©e pour milieu de terrain..."
	bash -c 'source $(VENV_ACTIVATE) && $(PYTHON) $(SCRIPT) "$(URL)" "$(PLAYER_NAME)" "MIL" 0 --advanced'

advanced-att:
	@echo "üß† Analyse avanc√©e pour attaquant..."
	bash -c 'source $(VENV_ACTIVATE) && $(PYTHON) $(SCRIPT) "$(URL)" "$(PLAYER_NAME)" "ATT" 0 --advanced'

advanced-def:
	@echo "üß† Analyse avanc√©e pour d√©fenseur..."
	bash -c 'source $(VENV_ACTIVATE) && $(PYTHON) $(SCRIPT) "$(URL)" "$(PLAYER_NAME)" "DEF" 0 --advanced'

# Only advanced analysis (super fast)
only-advanced:
	@echo "‚ö° Analyses avanc√©es uniquement (rapide)..."
	bash -c 'source $(VENV_ACTIVATE) && $(PYTHON) $(SCRIPT) "$(URL)" "$(PLAYER_NAME)" "$(POSTE)" --advanced-only'

# Clean the viz_data and player_data directories
clean:
	rm -rf $(VIZ_DATA_DIR)/*
	rm -rf $(PLAYER_DATA_DIR)/*
	rm -rf $(HTML_DATA_DIR)/*
	rm -rf $(PHOTO_DATA_DIR)/*
	rm -rf $(ADVANCED_ANALYSIS_DIR)/*
	@echo "üßπ Cleaned $(VIZ_DATA_DIR), $(PLAYER_DATA_DIR), $(HTML_DATA_DIR), $(PHOTO_DATA_DIR), and $(ADVANCED_ANALYSIS_DIR) directories."

# Clean only visualization outputs (keep raw data)
clean-viz:
	rm -rf $(VIZ_DATA_DIR)/*
	rm -rf $(ADVANCED_ANALYSIS_DIR)/*
	@echo "üßπ Cleaned visualization directories only."

# Clean only player data
clean-data:
	rm -rf $(PLAYER_DATA_DIR)/*
	rm -rf $(HTML_DATA_DIR)/*
	@echo "üßπ Cleaned data directories only."

# Install the required Python dependencies
install:
	sudo apt install chromium-chromedriver
	bash -c 'source $(VENV_ACTIVATE) && pip install -r requirements.txt'
	@echo "üì¶ Installed required dependencies from requirements.txt."

# Set up the virtual environment
setup:
	python3 -m venv env
	@echo "üîß Virtual environment created in /env. Activate it using 'source env/bin/activate'."

# Test the installation
test:
	@echo "üß™ Testing installation..."
	bash -c 'source $(VENV_ACTIVATE) && $(PYTHON) --version'
	bash -c 'source $(VENV_ACTIVATE) && $(PYTHON) -c "import selenium, matplotlib, numpy; print(\"‚úÖ All modules imported successfully\")"'
	@echo "‚úÖ Installation test completed."

# Show project status
status:
	@echo "üìä PROJECT STATUS"
	@echo "=================="
	@echo "üêç Python version: $$(python3 --version)"
	@echo "üìÅ Viz data files: $$(find $(VIZ_DATA_DIR) -name "*.png" 2>/dev/null | wc -l) PNG files"
	@echo "üìÑ Player data files: $$(find $(PLAYER_DATA_DIR) -name "*.json" 2>/dev/null | wc -l) JSON files"
	@echo "üß† Advanced analyses: $$(find $(ADVANCED_ANALYSIS_DIR) -name "*.png" 2>/dev/null | wc -l) PNG files"
	@echo "üì∏ Player photos: $$(find $(PHOTO_DATA_DIR) -name "*.jpg" 2>/dev/null | wc -l) JPG files"

# Help command with examples
help:
	@echo "‚öΩ FOOTBALL DATA ANALYSIS TOOLKIT"
	@echo "=================================="
	@echo ""
	@echo "üéØ QUICK COMMANDS:"
	@echo "  make quick-mil URL=\"...\" PLAYER_NAME=\"Vitinha\"     # Analyse rapide milieu"
	@echo "  make quick-att URL=\"...\" PLAYER_NAME=\"Mbapp√©\"     # Analyse rapide attaquant"
	@echo "  make advanced-mil URL=\"...\" PLAYER_NAME=\"Vitinha\" # Analyse avanc√©e milieu"
	@echo "  make only-advanced URL=\"...\" PLAYER_NAME=\"Vitinha\" # Analyses avanc√©es uniquement"
	@echo ""
	@echo "üìä STANDARD COMMANDS:"
	@echo "  make run URL=\"...\" PLAYER_NAME=\"...\" POSTE=\"MIL\" # Analyse standard"
	@echo "  make run-advanced URL=\"...\" PLAYER_NAME=\"...\" POSTE=\"MIL\" # Standard + avanc√©e"
	@echo "  make run-advanced-only URL=\"...\" PLAYER_NAME=\"...\" # Avanc√©e uniquement"
	@echo ""
	@echo "üßπ MAINTENANCE:"
	@echo "  make clean          # Nettoyer tous les fichiers g√©n√©r√©s"
	@echo "  make clean-viz      # Nettoyer uniquement les visualisations"
	@echo "  make clean-data     # Nettoyer uniquement les donn√©es"
	@echo "  make status         # Afficher le statut du projet"
	@echo ""
	@echo "üîß SETUP:"
	@echo "  make setup          # Cr√©er l'environnement virtuel"
	@echo "  make install        # Installer les d√©pendances"
	@echo "  make test           # Tester l'installation"
	@echo ""
	@echo "üí° EXEMPLES COMPLETS:"
	@echo "  make quick-mil URL=\"https://fr.whoscored.com/matches/1899310/live/...\" PLAYER_NAME=\"Vitinha\""
	@echo "  make advanced-att URL=\"https://fr.whoscored.com/matches/1899310/live/...\" PLAYER_NAME=\"Mbapp√©\""
	@echo "  make only-advanced URL=\"https://fr.whoscored.com/matches/1899310/live/...\" PLAYER_NAME=\"Hakimi\""
	@echo ""
	@echo "üöÄ NOUVEAU: Analyses Avanc√©es Disponibles!"
	@echo "   üß† Intelligence Spatiale    ‚ö° Analyse de Pression    üîÆ Analyse Pr√©dictive"

# Development shortcuts
dev-vitinha:
	@echo "üî¨ DEV: Analyse Vitinha avec toutes les options..."
	bash -c 'source $(VENV_ACTIVATE) && $(PYTHON) $(SCRIPT) "https://fr.whoscored.com/matches/1899310/live/europe-champions-league-2024-2025-paris-saint-germain-inter" "Vitinha" "MIL" 0 --advanced'

dev-mbappe:
	@echo "üî¨ DEV: Analyse Mbapp√© avec toutes les options..."
	bash -c 'source $(VENV_ACTIVATE) && $(PYTHON) $(SCRIPT) "https://fr.whoscored.com/matches/1899310/live/europe-champions-league-2024-2025-paris-saint-germain-inter" "Kylian Mbapp√©" "ATT" 0 --advanced'

# Performance monitoring
benchmark:
	@echo "‚è±Ô∏è BENCHMARK: Mesure des performances..."
	@time make only-advanced URL="$(URL)" PLAYER_NAME="$(PLAYER_NAME)"
	@echo "‚úÖ Benchmark termin√©."